alias: Sonos Text To Speech
description: "Speak given text on a Sonos speaker."
mode: queued
fields:
  speaker:
    description: "Where to speak the text"
    example: "living_room"
  phrase:
    description: "What text to speak"
    example: "Hello world!"
sequence:
  - service: sonos.snapshot
    data_template:
      entity_id: "{{ 'media_player.' ~ speaker }}"
      with_group: yes
  - service: sonos.unjoin
    data_template:
      entity_id: "{{ 'media_player.' ~ speaker }}"
  - service: media_player.volume_set
    data_template:
      entity_id: "{{ 'media_player.' ~ speaker }}"
      volume_level: 0.40
  - service: tts.cloud_tts
    data_template:
      entity_id: "{{ 'media_player.' ~ speaker }}"
      message: "{{ phrase }}"
  - delay:
      seconds: 1
  - delay: >-
      {% set duration = states.media_player[speaker].attributes.media_duration %}
      {% if duration > 0 %}
        {% set duration = duration - 1 %}
      {% endif %}
      {% set seconds = duration % 60 %}
      {% set minutes = (duration / 60)|int % 60 %}
      {% set hours = (duration / 3600)|int %}
      {{ "%02i:%02i:%02i"|format(hours, minutes, seconds)}}
  - service: sonos.restore
    data_template:
      entity_id: "{{ 'media_player.' ~ speaker }}"
      with_group: yes
